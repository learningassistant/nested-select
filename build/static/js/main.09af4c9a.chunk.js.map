{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["data","name","id","children","OptionsList","options","selectedOptions","expandedOptions","onChange","expandList","expandedOptionId","handleCheckboxClicked","option","selectChildren","opt","selected","length","map","c","handleChildrenListChange","optionId","subSelected","subExpanded","Object","entries","checkChildrenSelected","parent","className","allChildrenSelected","expanded","label","Folder","onClick","Checkbox","App","state","console","table","JSON","stringify","this","style","float","width","setState","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09af4c9a.chunk.js","sourcesContent":["import React from 'react';\nimport { \n  MdCheckBoxOutlineBlank, \n  MdCheckBox, \n  MdIndeterminateCheckBox,\n  MdFolder,\n  MdFolderOpen,\n  MdAssignment,\n} from 'react-icons/md';\n\nimport './App.css';\n\nconst data = [\n  {\n    name: \"Introduction\",\n    id: \"Introduction-id\",\n    children: [\n      {\n        name: \"Pack 1\",\n        id: \"Pack-1-id\",\n        children: [\n          {\n            name: \"Part 1\",\n            id: \"Part-1-id\",\n            children: [\n              {\n                name: \"Assignment\",\n                id: \"Part-1-Child-1-id\",\n                children: [\n                  {\n                    name: \"Complete and Upload\",\n                    id: \"Part-1-Child-1-Child-1-id\",\n                    children: []\n                  }\n                ]\n              },\n              {\n                name: \"Reviews\",\n                id: \"Part-1-Child-2-id\",\n                children: [\n                  {\n                    name: \"Complete and Upload\",\n                    id: \"Part-1-Child-2-Child-1-id\",\n                    children: []\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      {\n        name: \"Criteria\",\n        id: \"Pack-2-id\",\n        children: []\n      }\n    ]\n  },\n  {\n    name: \"1 Deep\",\n    id: \"1-deep-id\",\n    children: [\n      {\n        name: \"Child\",\n        id: \"1-deep-child-id\",\n        children: []\n      },\n    ],\n  },\n  {\n    name: \"2 Deep\",\n    id: \"2-deep-id\",\n    children: [\n      {\n        name: \"level 2\",\n        id: \"2-deep-level-2-id\",\n        children: [\n          {\n            name: \"level 3\",\n            id: \"2-deep-level-3-id\",\n            children: []\n          },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"3 Deep\",\n    id: \"3-deep-id\",\n    children: [\n      {\n        name: \"level 2\",\n        id: \"3-deep-level-2-id\",\n        children: [\n          {\n            name: \"level 3\",\n            id: \"3-deep-level-3-id\",\n            children: [\n              {\n                name: \"level 3\",\n                id: \"3-deep-level-3-id\",\n                children: []\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"4 Deep\",\n    id: \"4-deep-id\",\n    children: [\n      {\n        name: \"level 2\",\n        id: \"4-deep-level-2-id\",\n        children: [\n          {\n            name: \"level 3\",\n            id: \"4-deep-level-3-id\",\n            children: [\n              {\n                name: \"level 4\",\n                id: \"4-deep-level-4-id\",\n                children: []\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"5 Deep\",\n    id: \"5-deep-id\",\n    children: [\n      {\n        name: \"level 2\",\n        id: \"5-deep-level-2-id\",\n        children: [\n          {\n            name: \"level 3\",\n            id: \"5-deep-level-3-id\",\n            children: [\n              {\n                name: \"level 4\",\n                id: \"5-deep-level-4-id\",\n                children: [\n                  {\n                    name: \"level 5\",\n                    id: \"5-deep-level-5-id\",\n                    children: []\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  }\n]\n\nconst OptionsList = ({ options, selectedOptions, expandedOptions, onChange }) => {\n \n  const expandList = (expandedOptionId) => {\n    if(expandedOptions[expandedOptionId]){\n      delete expandedOptions[expandedOptionId]; \n    } else {\n      expandedOptions[expandedOptionId] = {};\n    }\n    onChange(selectedOptions, expandedOptions);\n  }\n \n  const handleCheckboxClicked = (option) => {\n    if(selectedOptions[option.id]){\n      delete selectedOptions[option.id]; \n    } else {\n      // Recursively select all children as well from parent\n      let selectChildren = (opt, selected) => {\n        selected[opt.id] = {};\n\n        if (opt.children.length) {\n          opt.children.map((c) => {\n            selectChildren (c, selected[opt.id]);\n          })\n        }\n      }\n      selectChildren(option, selectedOptions);\n    }\n    onChange(selectedOptions, expandedOptions);\n  }\n  \n  const handleChildrenListChange = (optionId, subSelected, subExpanded) => {\n    if (Object.entries(subSelected).length) {\n      selectedOptions[optionId] = subSelected;\n    }\n    if (Object.entries(subExpanded).length) {\n      expandedOptions[optionId] = subExpanded;\n    }\n    \n    onChange(selectedOptions, expandedOptions);\n  }\n  \n  const checkChildrenSelected = (options, parent) => {\n    let selected = options[parent.id] && parent.children && \n      Object.entries(parent.children).length === Object.entries(options[parent.id]).length;\n\n    if (selected && Object.entries(parent.children).length) {\n      parent.children.map((c) => {\n        if (selected) {\n          selected = checkChildrenSelected(options[parent.id], c);\n        }\n      })\n    }\n\n    return selected;\n  }\n  \n  return (\n    <ul className={'list'}>\n      {options.map(option => (\n        <li>\n          <div className={'list-checkbox'}>\n            <Checkbox\n              className={'list-checkbox'}\n              allChildrenSelected={checkChildrenSelected(selectedOptions, option)} \n              selected={selectedOptions && selectedOptions[option.id]} \n              onChange={() => {handleCheckboxClicked(option)}}\n            />\n          </div>\n          {\n            option.children.length > 0 && \n            <Folder \n              expanded={expandedOptions && expandedOptions[option.id]}\n              onChange={() => {expandList(option.id)}}\n              label={option.name}\n            />\n          }\n          {\n            option.children.length === 0 && \n            <div><MdAssignment />{option.name}</div>\n          }\n          {(option.children.length > 0 && expandedOptions[option.id]) &&\n            <OptionsList\n              options={option.children}\n              selectedOptions={selectedOptions[option.id] || {}} \n              expandedOptions={expandedOptions[option.id] || {}} \n              onChange={(subSelected, subExpanded) => handleChildrenListChange(option.id, subSelected, subExpanded)}\n            />\n          }\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nconst Folder = ({ expanded, label, onChange }) => {\n  if (expanded) {\n    return (\n      <div onClick={() => onChange(!expanded)}>\n        <MdFolderOpen />\n        {label}\n      </div>\n    );\n  }\n  return (\n    <div onClick={() => onChange(!expanded)}>\n      <MdFolder />\n      {label}\n    </div>\n  );\n}\n\nconst Checkbox = ({ allChildrenSelected, selected, label, onChange }) => {\n  \n    if (allChildrenSelected) {\n      return (\n        <MdCheckBox\n          onClick={() => onChange(!selected)} \n        />\n      ) \n    } else if (selected) { \n      return (\n        <MdIndeterminateCheckBox\n          onClick={() => onChange(!selected)} \n        />\n      )\n    }\n\n    return (\n      <MdCheckBoxOutlineBlank\n        onClick={() => onChange(!selected)} \n      />\n    )\n\n}\n\nclass App extends React.Component {\n  // Basic implentation of app store\n  state = {\n    selectedOptions: {},\n    expandedOptions: {},\n  }\n\n  render() {\n    console.table(JSON.stringify(this.state.selectedOptions));\n    return (\n      <div className=\"App\">\n        <div style={{float: 'left', width: '60%'}}> {/* Quick wrapper to show the component and data object */}\n          <h1> Task Wizard </h1>\n          <OptionsList \n            options={data}\n            onChange={(selectedOptions, expandedOptions) => this.setState({selectedOptions, expandedOptions})}\n            selectedOptions={ this.state.selectedOptions } \n            expandedOptions={ this.state.expandedOptions } \n          />\n        </div>\n        <div style={{float: 'right'}}>\n          <h4>JS Data Object</h4>\n          <pre>{JSON.stringify(data, null, 1)}</pre>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}